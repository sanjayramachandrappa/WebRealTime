import React, { useState, useEffect } from 'react';
import DataTable from 'react-data-table-component';
import axios from 'axios';
import './TableExample.css';

const columns = [
  { name: 'ID', selector: 'id', sortable: true },
  { name: 'Name', selector: 'name', sortable: true },
  { name: 'Email', selector: 'email', sortable: true },
];

const TableExample = () => {
  const [globalFilterText, setGlobalFilterText] = useState('');
  const [columnFilterText, setColumnFilterText] = useState({}); // Individual column filter texts
  const [data, setData] = useState([]);

  const handleGlobalFilter = (e) => {
    const value = e.target.value || '';
    setGlobalFilterText(value);
  };

  const handleColumnFilter = (colName, value) => {
    setColumnFilterText({ ...columnFilterText, [colName]: value });
  };

  useEffect(() => {
    // Fetch data using Axios
    axios
      .get('https://jsonplaceholder.typicode.com/users')
      .then((response) => {
        setData(response.data);
      })
      .catch((error) => {
        console.error('Error fetching data:', error);
      });
  }, []);

  const filteredData = data.filter((row) => {
    return Object.keys(columnFilterText).every((colName) =>
      row[colName].toString().toLowerCase().includes(columnFilterText[colName].toLowerCase())
    ) && Object.values(row).some((value) =>
      value.toString().toLowerCase().includes(globalFilterText.toLowerCase())
    );
  });

  // Define custom sub-header components for each column
  const subHeaderComponentMemo = columns.map((col) => (
    <input
      key={col.name}
      type="text"
      placeholder={`Search ${col.name}...`}
      onChange={(e) => handleColumnFilter(col.name, e.target.value)}
      value={columnFilterText[col.name] || ''}
    />
  ));

  return (
    <>
      <input
        type="text"
        placeholder="Search all columns..."
        onChange={handleGlobalFilter}
        value={globalFilterText}
      />

      <DataTable
        columns={columns}
        data={filteredData}
        pagination
        highlightOnHover
        responsive
        paginationPerPage={7}
        paginationRowsPerPageOptions={[5, 10, 20]}
        subHeader
        subHeaderComponent={subHeaderComponentMemo}
      />
    </>
  );
};

export default TableExample;
